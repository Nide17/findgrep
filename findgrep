#!/bin/bash

# 1. GLOBAL VARIABLES
# echo "${@:1:${#}-1}" : GETTING ALL BEFORE LAST
# THE PATTERN SHOULD BE THE LAST ARGUMENT
PATTERN="${@: -1}"

# THE CURRENT DIRECTORY
DIRECT=.

# DIRECTORY CONTAINING THE SCRIPT - GETTING IT AS THE FIRST ARGUMENT $0
ROOTDIR=$(cd -P -- "$(dirname -- "$0")" && pwd -P)

# THE PARENT DIRECTORY OF CURRENT DIRECTORY (..)
UP=..

# DEFAULT ARGUMENTS TO THE COMMAND
DEFAULTARGS="-REn --color "
OPTIONS="--include=*.c --include=*.h --include=*.hpp --include=*.cpp"

# CURRENT SCRIPT NAME
SCRIPTNAME=$(basename $0)

# 2. FUNCTIONS
# USAGE FUNCTION - MANUAL
usage() {
    echo "Usage: $SCRIPTNAME [options] <egrep-pattern>"
    echo
    echo "Recursively searches files in and below a given directory (by default, the current directory) for a specified regular expression. By default, the search will examine only C and C++ files—that is,  those that end in .c, .cpp, h, or .hpp—but this can be overridden via command line options."
    echo
    echo "<egrep-pattern> is an extended regular expression as used by grep -E"
    echo
    echo "Options can be one or more of:"
    echo
    echo "  --c                 C mode (the default): search files ending in .c, .h, .cpp and .hpp"
    echo "  --py                Python mode: search files ending in .py, .json, and .xml"
    echo "  --text              Text mode: search files ending in .txt, .texi, .md, or beginning with the name  README."
    echo "  --all               Look at all files, not just C/C++ files"
    echo "  --help              Print this usage message and exit"
    echo "  -i | --insensitive  Perform case insensitive search (default is case sensitive)"
    echo "  --top <rootdir>     Set the root directory of the search; default is cwd"
    echo "  --up                Set the root of the search to parent of cwd; equivalent to “--top=..”"
}

# ERROR FUNCTION
errorMessage() {
    echo -e "
    $SCRIPTNAME: $1"
}

# 3. PROCESS OPTIONS
# IF ARGUMENTS ARE NOT SPECIFIED - DISPLAY ERROR, USAGE AND EXIT
if [ $# -eq 0 ] ; then
    errorMessage "You must provide a pattern to search for!\n"
    usage
    exit 1
fi

# IF MORE THAN 1 ARGS - THE LAST ARG BE THE PATTERN - DO NOT SHIFT IT
while [ $# -gt 0 ] ; do

    case "$1" in

        # SEARCHING THROUGH C AND CPP FILES
        --c) OPTIONS="--include=*.c --include=*.h --include=*.hpp --include=*.cpp"
            ;;

        # PRINT HELP (USAGE) MESSAGE
        -h | --help) usage 0
            ;;

        # SEARCHING THROUGH ALL FILES, NOT JUST C, CPP
        --all) OPTIONS=""
            ;;

        # SEARCHING THROUGH TEXT FILES
        --text) OPTIONS="--include=*.txt --include=*texi --include=*md --include=README.*"
            ;;

        # SEARCHING THROUGH PYTHON FILES
        --py) OPTIONS="--include=*.py --include=*json --include=*xml"
            ;;

        # CASE INSENSITIVE SEARCH
        -i | --insensitive) DEFAULTARGS+="-i"
            ;;
            
        # SEARCH FROM SPECIFIED DIRECTORY - to be worked on
        --top=*)
            # SPECIFY ANYTHING NEXT TO --top WHILST EQUAL IS USED
            DIRECT="${1##*=}" 
            OPTIONS="--include=*.c --include=*.h --include=*.hpp --include=*.cpp"
            ;;

        --top)
            # SPECIFY ANYTHING NEXT TO --top WHEN SPACE AFTER --top
            OPTIONS="--include=*.c --include=*.h --include=*.hpp --include=*.cpp"
            DIRECT="${2}"
            ;;

        # SEARCH FROM PARENT DIRECTORY
        --up) DIRECT=$UP
            ;;

        # WHEN THE SPECIFIED OPTION IS NOT AVALIABLE
        -*) errorMessage "Invalid option specified: \033[0;31m$1\033[0m\n"
            usage
            exit 1
            ;;

        # DEFAULT CASE
        *) break
            ;;
        
    esac

    # SHIFT TO THE NEXT (ARG) OPTION
    shift
done

# 4 BODY - PERFORMING THE SEARCHING
grep $DEFAULTARGS ${OPTIONS[@]} "$PATTERN" "$DIRECT"